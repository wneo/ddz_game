{"version":3,"sources":["assets/scripts/data/socket_ctr.js"],"names":["socketCtr","that","respone_map","call_index","_socket","event","eventlister","_sendmsg","cmdtype","req","callindex","emit","cmd","data","_request","callback","console","log","JSON","stringify","initSocket","opts","window","io","connect","defines","serverUrl","on","res","hasOwnProperty","callBackIndex","result","type","fire","request_wxLogin","request_creatroom","request_jion","request_enter_room","request_buchu_card","request_chu_card","onPlayerJoinRoom","onPlayerReady","onGameStart","onChangeHouseManage","requestReady","requestStart","requestRobState","state","onPushCards","onCanRobState","onRobState","onChangeMaster","onShowBottomCard","onCanChuCard","onRoomChangeState","onOtherPlayerChuCard"],"mappings":"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","sourceRoot":"/","sourcesContent":["import eventlister from \"../util/event_lister.js\"\n\nconst socketCtr = function(){\n    var that = {}\n    var respone_map = {} \n    var call_index = 0\n\n    var _socket = null\n    var event = eventlister({})\n    const _sendmsg = function(cmdtype,req,callindex){\n        _socket.emit(\"notify\",{cmd:cmdtype,data:req,callindex:callindex})\n    } \n \n    const _request = function(cmdtype,req,callback){\n        console.log(\"send cmd:\"+cmdtype+\"  \"+ JSON.stringify(req))\n        call_index++ \n        respone_map[call_index] = callback\n        _sendmsg(cmdtype,req,call_index)\n    } \n  \n        \n    that.initSocket = function(){\n        var opts = {\n            'reconnection':false,\n            'force new connection': true,\n            'transports':['websocket', 'polling']\n        }\n        _socket = window.io.connect(defines.serverUrl,opts);\n\n        _socket.on(\"connection\",function(){\n            console.log(\"connect server success!!\")\n          })\n\n       _socket.on(\"notify\",function(res){\n         console.log(\"on notify cmd:\" + JSON.stringify(res))\n         if(respone_map.hasOwnProperty(res.callBackIndex)){\n           var callback = respone_map[res.callBackIndex]\n           if(callback){\n               callback(res.result,res.data)\n           }\n          }else{\n           //if(res.callBackIndex!=0){\n           //console.log(\"not found call index\",res.callBackIndex)\n              \n               //提交一个监听的事件给监听器\n        //  on notify cmd:{\"type\":\"player_joinroom_notify\",\"result\":0,\"data\":\n        //  {\"accountid\":\"2586422\",\"nick_name\":\"tiny110\",\"avatarUrl\":\n        //  \"avatar_3\",\"goldcount\":1000,\"seatindex\":2},\"callBackIndex\":null}\n              //没有找到回到函数，就给事件监听器提交一个事件\n              var type = res.type\n              event.fire(type,res.data)\n          // }\n           \n         }\n\n        })\n\n    }\n\n    that.request_wxLogin = function(req,callback){\n        _request(\"wxlogin\",req,callback)\n    }\n    \n    that.request_creatroom = function(req,callback){\n        _request(\"createroom_req\",req,callback)\n    }\n\n    that.request_jion = function(req,callback){\n        _request(\"joinroom_req\",req,callback)\n    }\n\n    that.request_enter_room = function(req,callback){\n        _request(\"enterroom_req\",req,callback)\n    }\n\n    //发送不出牌信息\n    that.request_buchu_card =  function(req,callback){\n        _request(\"chu_bu_card_req\",req,callback)\n    }\n    /*玩家出牌\n      需要判断: \n         出的牌是否符合规则\n         和上个出牌玩家比较，是否满足条件\n\n    */\n    that.request_chu_card = function(req,callback){\n        _request(\"chu_card_req\",req,callback)\n    }\n    //监听其他玩家进入房间消息\n    that.onPlayerJoinRoom = function(callback){\n         event.on(\"player_joinroom_notify\",callback)\n    }\n\n    that.onPlayerReady = function(callback){\n        event.on(\"player_ready_notify\",callback)\n    }\n\n    that.onGameStart = function(callback){\n        if(callback){\n           event.on(\"gameStart_notify\",callback)\n        }\n    }\n\n    that.onChangeHouseManage = function(callback){\n        if(callback){\n            event.on(\"changehousemanage_notify\",callback)\n        }\n    }\n    //发送ready消息\n    that.requestReady = function(){\n        _sendmsg(\"player_ready_notify\",{},null)\n    }\n\n    that.requestStart = function(callback){\n        _request(\"player_start_notify\",{},callback)\n    }\n\n    //玩家通知服务器抢地主消息\n    that.requestRobState = function(state){\n        _sendmsg(\"player_rob_notify\",state,null)\n    }\n    //服务器下发牌通知\n    that.onPushCards = function(callback){\n        if(callback){\n            event.on(\"pushcard_notify\",callback)\n         }\n    }\n\n    //监听服务器通知开始抢地主消息\n    that.onCanRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_notify\",callback)\n         }\n    }\n\n    //监听服务器:通知谁抢地主操作消息\n    that.onRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_state_notify\",callback)\n         }\n    }\n\n    //监听服务器:确定地主消息\n    that.onChangeMaster = function(callback){\n        if(callback){\n            event.on(\"change_master_notify\",callback)\n         }\n    }\n\n    //监听服务器:显示底牌消息\n    that.onShowBottomCard = function(callback){\n        if(callback){\n            event.on(\"change_showcard_notify\",callback)\n         }\n    }\n\n    //监听服务器:可以出牌消息\n    that.onCanChuCard = function(callback){\n        if(callback){\n            event.on(\"can_chu_card_notify\",callback)\n        }\n    }\n\n    that.onRoomChangeState = function(callback){\n        if(callback){\n            event.on(\"room_state_notify\",callback)\n        }\n    }\n\n    that.onOtherPlayerChuCard = function(callback){\n        if(callback){\n            event.on(\"other_chucard_notify\",callback)\n        }\n    }\n    return that\n}\n\nexport default socketCtr "]}
{"version":3,"sources":["assets/scripts/gameScene/gameScene.js"],"names":["cc","Class","Component","properties","di_label","Label","beishu_label","roomid_label","player_node_prefabs","Prefab","players_seat_pos","Node","gameEnd","onLoad","playerNodeList","string","myglobal","playerData","bottom","rate","roomstate","RoomState","ROOM_INVALID","node","on","console","log","i","length","emit","bind","socket","onRoomChangeState","data","event","gameui_node","getChildByName","request_enter_room","err","result","JSON","stringify","seatid","seatindex","playerdata_list_pos","setPlayerSeatPos","playerdata_list","playerdata","roomid","housemanageid","addPlayerNode","isopen_sound","audioEngine","stopAll","play","url","raw","gamebefore_node","onPlayerJoinRoom","join_playerdata","onPlayerReady","onGameStart","gamebeforeUI","active","onRobState","onChangeMaster","master_accountid","onShowBottomCard","seat_index","player_data","playernode_inst","instantiate","parent","push","index","position","children","getComponent","init_data","start","getUserOutCardPosByAccount","accountid","node_script","seat_node","index_name","out_card_node"],"mappings":"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","sourceRoot":"/","sourcesContent":["import myglobal from \"../../mygolbal.js\"\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        di_label:cc.Label,\n        beishu_label:cc.Label,\n        roomid_label:cc.Label,\n        player_node_prefabs:cc.Prefab,\n        //绑定玩家座位,下面有3个子节点\n        players_seat_pos:cc.Node,\n\n    },\n    //本局结束，做状态清除\n    gameEnd(){\n\n    },\n    onLoad () {\n        this.playerNodeList = []\n        this.di_label.string = \"底:\" +  myglobal.playerData.bottom\n        this.beishu_label.string = \"倍数:\" + myglobal.playerData.rate\n        this.roomstate = RoomState.ROOM_INVALID\n        //监听，给其他玩家发牌(内部事件)\n        this.node.on(\"pushcard_other_event\",function(){\n            console.log(\"gamescene pushcard_other_event\")\n            for(var i=0;i<this.playerNodeList.length;i++){\n                    var node = this.playerNodeList[i]\n                    if(node){\n                    //给playernode节点发送事件\n                        node.emit(\"push_card_event\")\n                    }\n            }\n        }.bind(this))\n\n        //监听房间状态改变事件\n        myglobal.socket.onRoomChangeState(function(data){\n            //回调的函数参数是进入房间用户消息\n            console.log(\"onRoomChangeState:\"+data)\n            this.roomstate = data\n        }.bind(this))\n        //\n        this.node.on(\"canrob_event\",function(event){\n            console.log(\"gamescene canrob_event:\"+event)\n            //通知给playernode子节点\n            for(var i=0;i<this.playerNodeList.length;i++){\n                var node = this.playerNodeList[i]\n                if(node){\n                    //给playernode节点发送事件\n                    node.emit(\"playernode_canrob_event\",event)\n                }\n            }\n        }.bind(this))\n\n        this.node.on(\"choose_card_event\",function(event){\n            console.log(\"--------choose_card_event-----------\")\n            var gameui_node =  this.node.getChildByName(\"gameingUI\")\n            if(gameui_node==null){\n               console.log(\"get childer name gameingUI\")\n               return\n            }\n            gameui_node.emit(\"choose_card_event\",event)\n           \n        }.bind(this))\n\n        this.node.on(\"unchoose_card_event\",function(event){\n            console.log(\"--------unchoose_card_event-----------\")\n            var gameui_node =  this.node.getChildByName(\"gameingUI\")\n            if(gameui_node==null){\n               console.log(\"get childer name gameingUI\")\n               return\n            }\n            gameui_node.emit(\"unchoose_card_event\",event)\n        }.bind(this))\n        //监听给玩家添加三张底牌\n        // this.node.on(\"add_three_card\",function(event){\n        //     console.log(\"add_three_card:\"+event)\n        //     for(var i=0;i<this.playerNodeList.length;i++){\n        //         var node = this.playerNodeList[i]\n        //         if(node){\n        //             //给playernode节点发送事件\n        //             node.emit(\"playernode_add_three_card\",event)\n        //         }\n        //     }\n        // }.bind(this))\n\n        myglobal.socket.request_enter_room({},function(err,result){\n            console.log(\"enter_room_resp\"+ JSON.stringify(result))\n            if(err!=0){\n               console.log(\"enter_room_resp err:\"+err)\n            }else{\n             \n              //enter_room成功\n              //notify ={\"seatid\":1,\"playerdata\":[{\"accountid\":\"2117836\",\"nick_name\":\"tiny543\",\"avatarUrl\":\"http://xxx\",\"goldcount\":1000}]}\n                var seatid = result.seatindex //自己在房间里的seatid\n                this.playerdata_list_pos = []  //3个用户创建一个空用户列表\n                this.setPlayerSeatPos(seatid)\n\n                var playerdata_list = result.playerdata\n                var roomid = result.roomid\n                this.roomid_label.string = \"房间号:\" + roomid\n                myglobal.playerData.housemanageid = result.housemanageid\n                \n                for(var i=0;i<playerdata_list.length;i++){\n                    //consol.log(\"this----\"+this)\n                    this.addPlayerNode(playerdata_list[i])\n                }\n\n                if(isopen_sound){\n                    cc.audioEngine.stopAll()\n                    cc.audioEngine.play(cc.url.raw(\"resources/sound/bg.mp3\"),true) \n                 }\n            }\n            var gamebefore_node = this.node.getChildByName(\"gamebeforeUI\")\n            gamebefore_node.emit(\"init\")\n        }.bind(this))\n\n        //在进入房间后，注册其他玩家进入房间的事件\n        myglobal.socket.onPlayerJoinRoom(function(join_playerdata){\n            //回调的函数参数是进入房间用户消息\n            console.log(\"onPlayerJoinRoom:\"+JSON.stringify(join_playerdata))\n            this.addPlayerNode(join_playerdata)\n        }.bind(this))\n        \n        //回调参数是发送准备消息的accountid\n        myglobal.socket.onPlayerReady(function(data){\n            console.log(\"-------onPlayerReady:\"+data)\n            for(var i=0;i<this.playerNodeList.length;i++){\n                var node = this.playerNodeList[i]\n                if(node){\n                    node.emit(\"player_ready_notify\",data)\n                }\n            }\n        }.bind(this))\n\n        myglobal.socket.onGameStart(function(){\n            for(var i=0;i<this.playerNodeList.length;i++){\n                var node = this.playerNodeList[i]\n                if(node){\n                    node.emit(\"gamestart_event\")\n                }\n            }\n\n        //隐藏gamebeforeUI节点\n        var gamebeforeUI = this.node.getChildByName(\"gamebeforeUI\")\n            if(gamebeforeUI){\n                gamebeforeUI.active = false\n            }\n        }.bind(this))\n\n              //监听服务器玩家抢地主消息\n        myglobal.socket.onRobState(function(event){\n                console.log(\"-----onRobState\"+JSON.stringify(event))\n                //onRobState{\"accountid\":\"2162866\",\"state\":1}\n                for(var i=0;i<this.playerNodeList.length;i++){\n                    var node = this.playerNodeList[i]\n                    if(node){\n                        //给playernode节点发送事件\n                        node.emit(\"playernode_rob_state_event\",event)\n                    }\n                }\n        }.bind(this))\n\n        //注册监听服务器确定地主消息\n        myglobal.socket.onChangeMaster(function(event){\n            console.log(\"onChangeMaster\"+event)\n            //保存一下地主id\n            myglobal.playerData.master_accountid = event\n            for(var i=0;i<this.playerNodeList.length;i++){\n                var node = this.playerNodeList[i]\n                if(node){\n                    //给playernode节点发送事件\n                    node.emit(\"playernode_changemaster_event\",event)\n                }\n            }\n        }.bind(this))\n        \n        //注册监听服务器显示底牌消息\n        myglobal.socket.onShowBottomCard(function(event){\n           console.log(\"onShowBottomCard---------\"+event)\n           var gameui_node =  this.node.getChildByName(\"gameingUI\")\n           if(gameui_node==null){\n              console.log(\"get childer name gameingUI\")\n              return\n           }\n           gameui_node.emit(\"show_bottom_card_event\",event)\n        }.bind(this))\n    },\n\n    //seat_index自己在房间的位置id\n    setPlayerSeatPos(seat_index){\n        if(seat_index < 1 || seat_index > 3){\n            console.log(\"seat_index error\"+seat_index)\n            return\n        }\n\n        console.log(\"setPlayerSeatPos seat_index:\" + seat_index)\n       \n        //界面位置转化成逻辑位置\n        switch(seat_index){\n            case 1:\n                   this.playerdata_list_pos[1] = 0\n                   this.playerdata_list_pos[2] = 1 \n                   this.playerdata_list_pos[3] = 2\n              break\n             case 2:\n                   \n\n                    this.playerdata_list_pos[2] = 0\n                    this.playerdata_list_pos[3] = 1\n                    this.playerdata_list_pos[1] = 2\n                    break\n             case 3:\n                    this.playerdata_list_pos[3] = 0     \n                    this.playerdata_list_pos[1] = 1\n                    this.playerdata_list_pos[2] = 2\n                    break\n            default: \n              break      \n        } \n\n    },\n\n    addPlayerNode(player_data){\n        var playernode_inst = cc.instantiate(this.player_node_prefabs)\n        playernode_inst.parent = this.node\n        //创建的节点存储在gamescene的列表中\n        this.playerNodeList.push(playernode_inst)\n\n        //玩家在room里的位置索引(逻辑位置)\n        var index = this.playerdata_list_pos[player_data.seatindex]\n        console.log(\"index \"+player_data.seatindex+ \" \"+index)\n        playernode_inst.position = this.players_seat_pos.children[index].position\n        playernode_inst.getComponent(\"player_node\").init_data(player_data,index)\n    },\n\n    start () {\n    },\n\n    /*\n     //通过accountid获取用户出牌放在gamescend的位置 \n     做法：先放3个节点在gameacene的场景中cardsoutzone(012)\n           \n    */\n    getUserOutCardPosByAccount(accountid){\n        console.log(\"getUserOutCardPosByAccount accountid:\"+accountid)\n        for(var i=0;i<this.playerNodeList.length;i++){\n            var node = this.playerNodeList[i]\n            if(node){\n                //获取节点绑定的组件\n                var node_script = node.getComponent(\"player_node\")\n                //如果accountid和player_node节点绑定的accountid相同\n                //接获取player_node的子节点\n                if(node_script.accountid===accountid){\n                  var seat_node = this.players_seat_pos.children[node_script.seat_index]\n                  var index_name = \"cardsoutzone\"+node_script.seat_index\n                  //console.log(\"getUserOutCardPosByAccount index_name:\"+index_name)\n                  var out_card_node = seat_node.getChildByName(index_name)\n                  //console.log(\"OutZone:\"+ out_card_node.name)\n                  return out_card_node\n                }\n            }\n        }\n\n        return null\n    },\n    // update (dt) {},\n});\n"]}